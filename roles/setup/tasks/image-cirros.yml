---

- name: Download latest metadata version
  get_url:
    url: "{{ url_base + '/' + file_version }}"
    dest: "{{ workdir + '/' + dist_name + '-cirros_version' }}"
    force: yes

- name: Download remote checksum (md5) file
  get_url:
    url: "{{ url_base + '/' + dist_release + '/' + item }}"
    dest: "{{ workdir + '/' + dist_name + '-' + item }}"
    force: yes
  with_items:
    - '{{ checksum_file }}'

- name: Lookup remote checksum (md5)
  shell: >
    grep -E "{{ file_base }}$" "{{ workdir + '/' + dist_name + '-' + checksum_file }}" | awk '{ print $1 }';
  register: remote_checksum
  failed_when: remote_checksum.stdout == ""
  changed_when: False

- name: Compute checksum (md5) from local image
  stat:
    path: "{{ disk_path + '/' + file_base }}"
    get_checksum: False
    get_md5: True
  register: local_img

- name: Set update_image fact if image not found
  set_fact:
    update_image: True
  when: local_img.stat.exists == False

- name: Check if an updated image is required
  set_fact:
    update_image: "{{ (local_img.stat.md5 != remote_checksum.stdout) | bool }}"
  when: local_img.stat.exists == True

- name: Download cloud image (please wait)
  get_url:
    url: "{{ url_base + '/' + dist_release + '/' + file_base }}"
    dest: "{{ disk_path + '/' + file_base }}"
    checksum: md5:{{ remote_checksum.stdout }}
    force: "{{ update_image }}"
